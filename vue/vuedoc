<span :class='{"one":true,"two":true}'></span>
自定义扩展参数：:on-success="onSuccess.bind(this,'canshu')"  //this是原有的参数
子组件中获取dom元素，得在mounted() {
        this.$nextTick(function(){
            这里能获取dom元素
        })
    },
if (this && this._isDestroyed) {组件摧毁后执行}  

打包后的js,css不带hash值设置：build/webpack.prod.conf.js
导出：
Exportp:function(){
        //一、
      let downloadElement = document.createElement('a')
      let href=window.document.location.origin+ "/export/hisalarm?level="+level;
      downloadElement.href = href
      document.body.appendChild(downloadElement)
      downloadElement.click()
      document.body.removeChild(downloadElement) // 下载完成移除元素
      window.URL.revokeObjectURL(href) // 释放掉blob对象
       //二、
       let url = '/iSmacSite'+this.form_info.list[i].url;
            let link = document.createElement('a')
            link.style.display = 'none'
            link.href = url
            link.setAttribute('download', this.form_info.list[i].name)

            document.body.appendChild(link)
            link.click();
            window.URL.revokeObjectURL(link.href); // 释放URL 对象
            document.body.removeChild(link);
                    
       //三、    
      this.$api.get('/pointTemplate/pointTemplateExport', {typeTempId:this.dialogInfo.typeTempId}, r => {
          //下面的方法引入import XLSX from 'xlsx';  $ npm install xlsx      r是数据流
          const blob = new Blob([r], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' })
          const downloadElement = document.createElement('a')
          const href = window.URL.createObjectURL(blob)
          downloadElement.href = href
          downloadElement.download = 'rate.xlsx'
          document.body.appendChild(downloadElement)
          downloadElement.click()
          document.body.removeChild(downloadElement) // 下载完成移除元素
          window.URL.revokeObjectURL(href) // 释放掉blob对象
          
          
      }); 

 },




pickerOptions: {
      shortcuts: [{
        text: '今日',
        onClick(picker) {
            const theDate = new Date();
            const start=theDate.Format("yyyy-MM-dd 00:00:00");
            const end=theDate.Format("yyyy-MM-dd 23:59:59");
            picker.$emit('pick', [start, end]);
        }
      }, {
        text: '本周',
        onClick(picker) {
            const theDate = new Date();
            const nowDay=theDate.getDay();
            let start=null;
            let end=null;
            if(nowDay!=0){
                start=new Date(theDate.getTime()-3600*1000*24*(nowDay-1)).Format("yyyy-MM-dd 00:00:00");
                end=new Date(theDate.getTime()+3600*1000*24*(7-nowDay)).Format("yyyy-MM-dd 23:59:59");
            }else{
                start=new Date(theDate.getTime()-3600*1000*24*6).Format("yyyy-MM-dd 00:00:00");
                end=theDate.Format("yyyy-MM-dd 23:59:59");
            }
            picker.$emit('pick', [start, end]);
        }
      },{
        text: '本月',
        onClick(picker) {
            const theDate = new Date();
            let theMonth=theDate.getMonth();
            const start = new Date(theDate.getFullYear(),theMonth,1).Format("yyyy-MM-dd 00:00:00");
            let nextMonth=theMonth+1;
            const end=new Date(new Date(theDate.getFullYear(),nextMonth,1)-1000*60*60*24).Format("yyyy-MM-dd 23:59:59");
            picker.$emit('pick', [start, end]);
        }
      }]
      },
